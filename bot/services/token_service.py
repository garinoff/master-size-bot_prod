from datetime import datetime
from typing import Optional

from database.models import User
from database.database import get_session

async def add_tokens_to_user(
    telegram_id: int, 
    amount: int, 
    reason: str,
    transaction_type: str = "reward"
) -> bool:
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ MSZ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    
    try:
        async with get_session() as session:
            user = session.query(User).filter(User.telegram_id == telegram_id).first()
            
            if not user:
                return False
            
            user.msz_balance += amount
            user.total_earned_msz += amount
            user.updated_at = datetime.utcnow()
            
            session.commit()
            
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—É—é —Ç–∞–±–ª–∏—Ü—É)
            print(f"üíé –¢–æ–∫–µ–Ω—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã: User {telegram_id}, Amount: {amount}, Reason: {reason}")
            
            return True
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤: {e}")
        return False

async def get_user_balance(telegram_id: int) -> Optional[int]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    try:
        async with get_session() as session:
            user = session.query(User).filter(User.telegram_id == telegram_id).first()
            return user.msz_balance if user else None
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {e}")
        return None

async def process_referral_rewards(referrer_id: int, new_user_id: int):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥"""
    
    async with get_session() as session:
        referrer = session.query(User).filter(User.telegram_id == referrer_id).first()
        new_user = session.query(User).filter(User.telegram_id == new_user_id).first()
        
        if not referrer or not new_user:
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        if referrer.referral_count_l1 >= 50:
            return False
        
        # L1 –Ω–∞–≥—Ä–∞–¥–∞ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
        l1_reward = 250
        await add_tokens_to_user(referrer_id, l1_reward, f"–†–µ—Ñ–µ—Ä–∞–ª L1: {new_user.first_name}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        referrer.referral_count_l1 += 1
        
        # L2 –Ω–∞–≥—Ä–∞–¥–∞ (—Ä–µ—Ñ–µ—Ä–µ—Ä—É —Ä–µ—Ñ–µ—Ä–µ—Ä–∞)
        if referrer.referred_by:
            l2_referrer = session.query(User).filter(User.telegram_id == referrer.referred_by).first()
            if l2_referrer:
                l2_reward = 100
                await add_tokens_to_user(l2_referrer.telegram_id, l2_reward, f"–†–µ—Ñ–µ—Ä–∞–ª L2: {new_user.first_name}")
                
                # L3 –Ω–∞–≥—Ä–∞–¥–∞
                if l2_referrer.referred_by:
                    l3_referrer = session.query(User).filter(User.telegram_id == l2_referrer.referred_by).first()
                    if l3_referrer:
                        l3_reward = 50
                        await add_tokens_to_user(l3_referrer.telegram_id, l3_reward, f"–†–µ—Ñ–µ—Ä–∞–ª L3: {new_user.first_name}")
        
        session.commit()
        return True
