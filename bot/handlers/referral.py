import uuid
from aiogram import types, Dispatcher
from aiogram.dispatcher.filters import Text
from datetime import datetime

from database.models import User
from database.database import get_session
from services.token_service import add_tokens_to_user, process_referral_rewards
from utils.keyboards import get_referral_keyboard
from config import config

async def show_referral_info(message: types.Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ"""
    user_id = message.from_user.id
    
    async with get_session() as session:
        user = session.query(User).filter(User.telegram_id == user_id).first()
        
        if not user.referral_code:
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
            user.referral_code = generate_referral_code()
            session.commit()
        
        bot_username = (await message.bot.get_me()).username
        referral_link = f"https://t.me/{bot_username}?start={user.referral_code}"
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        l1_referrals = session.query(User).filter(User.referred_by == user_id).count()
        
        # –†–∞—Å—á–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞
        potential_l1 = config.REFERRAL_L1_MSZ * (config.MAX_REFERRALS_PER_USER - l1_referrals)
        
        referral_text = f"""
üë• **–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞**

üéØ **–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:**
`{referral_link}`

üìä **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {l1_referrals}/{config.MAX_REFERRALS_PER_USER}
‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {calculate_referral_earnings(user_id)} MSZ

üí∞ **–°–∏—Å—Ç–µ–º–∞ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–π:**
‚Ä¢ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ L1: {config.REFERRAL_L1_MSZ} MSZ
‚Ä¢ –ó–∞ –¥—Ä—É–≥–∞ –¥—Ä—É–≥–∞ L2: {config.REFERRAL_L2_MSZ} MSZ  
‚Ä¢ –ó–∞ –¥—Ä—É–≥–∞ –¥—Ä—É–≥–∞ –¥—Ä—É–≥–∞ L3: {config.REFERRAL_L3_MSZ} MSZ

üöÄ **–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –¥–æ—Ö–æ–¥:**
‚Ä¢ –ú–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –µ—â–µ: {potential_l1} MSZ

‚ö° **–ë–æ–Ω—É—Å—ã –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤:**
‚Ä¢ –ü—Ä–∏ >80% –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: +15% –∫ –Ω–∞–≥—Ä–∞–¥–∞–º
‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è

üìã **–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
1. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–µ–π —Å—Å—ã–ª–∫–æ–π
2. –î—Ä—É–≥ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è –∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
3. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω–∞–≥—Ä–∞–¥—É –ø–æ—Å–ª–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –µ–≥–æ –¥–∞–Ω–Ω—ã—Ö
4. –î—Ä—É–∑—å—è –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π —Ç–æ–∂–µ –ø—Ä–∏–Ω–æ—Å—è—Ç –¥–æ—Ö–æ–¥!
        """
        
        await message.answer(
            referral_text,
            reply_markup=get_referral_keyboard(),
            parse_mode="Markdown"
        )

async def process_referral_start(message: types.Message, referral_code: str):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ"""
    user_id = message.from_user.id
    
    async with get_session() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing_user = session.query(User).filter(User.telegram_id == user_id).first()
        if existing_user:
            return False  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        
        # –ù–∞—Ö–æ–¥–∏–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        referrer = session.query(User).filter(User.referral_code == referral_code).first()
        if not referrer:
            return False  # –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
        
        if referrer.telegram_id == user_id:
            return False  # –ù–µ–ª—å–∑—è –±—ã—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–º —Å–∞–º–æ–≥–æ —Å–µ–±—è
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        if referrer.referral_count_l1 >= config.MAX_REFERRALS_PER_USER:
            return False  # –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ —Ä–µ—Ñ–µ—Ä–µ—Ä—É
        new_user = User(
            telegram_id=user_id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            referred_by=referrer.telegram_id,
            referral_code=generate_referral_code()
        )
        session.add(new_user)
        session.commit()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await message.answer(
            f"üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í–∞—Å –ø—Ä–∏–≥–ª–∞—Å–∏–ª {referrer.first_name}.\n\n"
            f"–ó–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã!"
        )
        
        return True

async def complete_referral_reward(user_id: int):
    """–í—ã–¥–∞—á–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞"""
    async with get_session() as session:
        user = session.query(User).filter(User.telegram_id == user_id).first()
        
        if not user or not user.referred_by:
            return
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã
        success = await process_referral_rewards(user.referred_by, user_id)
        
        if success:
            # –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
            try:
                referrer = session.query(User).filter(User.telegram_id == user.referred_by).first()
                if referrer:
                    await message.bot.send_message(
                        user.referred_by,
                        f"üéâ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª {user.first_name} –∑–∞–≤–µ—Ä—à–∏–ª –æ–Ω–±–æ—Ä–¥–∏–Ω–≥!\n"
                        f"üíé –í—ã –ø–æ–ª—É—á–∏–ª–∏ {config.REFERRAL_L1_MSZ} MSZ"
                    )
            except Exception:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

async def share_referral_link(callback_query: types.CallbackQuery):
    """–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π"""
    user_id = callback_query.from_user.id
    
    async with get_session() as session:
        user = session.query(User).filter(User.telegram_id == user_id).first()
        bot_username = (await callback_query.bot.get_me()).username
        referral_link = f"https://t.me/{bot_username}?start={user.referral_code}"
        
        share_text = (
            f"üöÄ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —Ä–µ–≤–æ–ª—é—Ü–∏–∏ –≤ –æ–Ω–ª–∞–π–Ω-—à–æ–ø–ø–∏–Ω–≥–µ –æ–¥–µ–∂–¥—ã!\n\n"
            f"üéØ Telegram-–±–æ—Ç '–ú–∞—Å—Ç–µ—Ä-—Ä–∞–∑–º–µ—Ä' –ø–æ–º–æ–∂–µ—Ç:\n"
            f"‚Ä¢ –°–æ–∑–¥–∞—Ç—å —Ç–≤–æ–π 3D-–∞–≤–∞—Ç–∞—Ä\n"
            f"‚Ä¢ –¢–æ—á–Ω–æ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ä–∞–∑–º–µ—Ä –æ–¥–µ–∂–¥—ã\n" 
            f"‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–∫–µ–Ω—ã MSZ\n\n"
            f"üíé –ü–æ –º–æ–µ–π —Å—Å—ã–ª–∫–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å –±–æ–Ω—É—Å—ã: {referral_link}"
        )
        
        await callback_query.message.edit_text(
            f"üì§ **–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π**\n\n"
            f"–°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∏–∂–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–∑—å—è–º:\n\n"
            f"`{share_text}`",
            parse_mode="Markdown",
            reply_markup=get_referral_keyboard()
        )

def generate_referral_code() -> str:
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞"""
    return str(uuid.uuid4()).replace('-', '')[:8].upper()

def calculate_referral_earnings(user_id: int) -> int:
    """–ü–æ–¥—Å—á–µ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞ —Å —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø–æ–¥—Å—á–µ—Ç–∞ –≤—Å–µ—Ö —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥
    # –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
    async with get_session() as session:
        user = session.query(User).filter(User.telegram_id == user_id).first()
        return user.referral_count_l1 * config.REFERRAL_L1_MSZ

def register_handlers(dp: Dispatcher):
    dp.register_message_handler(show_referral_info, Text(equals="üë• –†–µ—Ñ–µ—Ä–∞–ª—ã"))
    dp.register_callback_query_handler(share_referral_link, Text(equals="share_referral"))
